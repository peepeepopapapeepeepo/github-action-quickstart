name: learn-github-actions
on: [push]
jobs:
#   check-bats-version:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#       - run: sudo npm install -g bats
#       - run: bats -v
# # --- artifact ---
#   upload-file:
#     runs-on: ubuntu-latest
#     steps:
#     - name: create file
#       shell: bash
#       run: |
#         expr 1 + 1 > output.log
#     - name: upload file
#       uses: actions/upload-artifact@v2.2.4
#       with:
#         name: output-log-file
#         path: output.log
#   download-file:
#     runs-on: ubuntu-latest
#     needs: upload-file
#     steps:
#     - name: Download a single artifact
#       uses: actions/download-artifact@v2
#       with:
#         name: output-log-file
#     - name: view files
#       run: cat output.log
# # --- Secret ---
#   secret:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Retrieve secret
#       env:
#         super_secret: ${{ secrets.SUPERSECRET }}
#       run: |
#         if [ "$super_secret" == "Test1234" ]; then echo PASS; fi
#     - name: Finished Test1234
#       run: echo 'Test1234'
# # --- Dependency ---
#   setup:
#     runs-on: ubuntu-latest
#     steps:
#     - name: checkout code
#       uses: actions/checkout@v2.3.4
#     - name: setup
#       run: bash ./setup_server.sh setup
#   build:
#     needs: setup
#     runs-on: ubuntu-latest
#     steps:
#     - name: checkout code
#       uses: actions/checkout@v2.3.4
#     - name: build
#       run: bash ./setup_server.sh build
#   test:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#     - name: checkout code
#       uses: actions/checkout@v2.3.4
#     - name: test
#       run: bash ./setup_server.sh test
# # --- Matrix ---
#   matrix:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-18.04, ubuntu-20.04]
#         node: [10, 12, 14]
# #         include:
# #           # includes a new variable of npm with a value of 6
# #           # for the matrix leg matching the os and version
# #           - os: windows-latest
# #             node: 8
# #             npm: 6
#         exclude:
#         - os: ubuntu-18.04
#           node: 10
#     steps:
#       - uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node }}
# # --- matrix and env
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#        include:
#          - node-version: 10.x
#            site: "prod"
#            datacenter: "site-a"
#          - node-version: 12.x
#            site: "dev"
#            datacenter: "site-b"
#     steps:
#       - name: Echo site details
#         env:
#           SITE: ${{ matrix.site }}
#           DATACENTER: ${{ matrix.datacenter }}
#         run: echo $SITE $DATACENTER
# # --- Cache ---
  cache-npm:
    runs-on: ubuntu-latest
    steps:

    - name: Check out
      uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
    
    - name: print cache status
      if: steps.cache.outputs.cache-hit == 'true'
      run: echo "hit"

    - name: Install Dependencies
      run: npm install

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run:  ls -la ~

    - name: Build
      run: npm build

#   cache-restore:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Check out
#       uses: actions/checkout@v2
    
#     - name: Setup Node.js
#       uses: actions/setup-node@v2
      
#     - name: Cache node modules
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-node-modules
#       with:
#         # npm cache files are stored in `~/.npm` on Linux/macOS
#         path: ~/.npm
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
#     - run:  ls -la ~
